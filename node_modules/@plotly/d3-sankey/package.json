{
  "_args": [
    [
      {
        "raw": "@plotly/d3-sankey@^0.5.0",
        "scope": "@plotly",
        "escapedName": "@plotly%2fd3-sankey",
        "name": "@plotly/d3-sankey",
        "rawSpec": "^0.5.0",
        "spec": ">=0.5.0 <0.6.0",
        "type": "range"
      },
      "/home/italove/Projects/ToT/node_modules/plotly.js"
    ]
  ],
  "_from": "@plotly/d3-sankey@>=0.5.0 <0.6.0",
  "_id": "@plotly/d3-sankey@0.5.0",
  "_inCache": true,
  "_location": "/@plotly/d3-sankey",
  "_nodeVersion": "6.9.4",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/d3-sankey-0.5.0.tgz_1493721813462_0.14681038563139737"
  },
  "_npmUser": {
    "name": "plotly",
    "email": "ben@plot.ly"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@plotly/d3-sankey@^0.5.0",
    "scope": "@plotly",
    "escapedName": "@plotly%2fd3-sankey",
    "name": "@plotly/d3-sankey",
    "rawSpec": "^0.5.0",
    "spec": ">=0.5.0 <0.6.0",
    "type": "range"
  },
  "_requiredBy": [
    "/plotly.js"
  ],
  "_resolved": "https://registry.npmjs.org/@plotly/d3-sankey/-/d3-sankey-0.5.0.tgz",
  "_shasum": "b22faea742e58251335ee5d9fba248772607800f",
  "_shrinkwrap": null,
  "_spec": "@plotly/d3-sankey@^0.5.0",
  "_where": "/home/italove/Projects/ToT/node_modules/plotly.js",
  "author": {
    "name": "Mike Bostock",
    "url": "http://bost.ocks.org/mike"
  },
  "bugs": {
    "url": "https://github.com/d3/d3-sankey/issues"
  },
  "dependencies": {
    "d3-array": "1",
    "d3-collection": "1",
    "d3-interpolate": "1"
  },
  "description": "Visualize flow between nodes in a directed acyclic network.",
  "devDependencies": {
    "eslint": "3",
    "package-preamble": "0.0.2",
    "rollup": "0.41",
    "tape": "4",
    "uglify-js": "2"
  },
  "directories": {},
  "dist": {
    "shasum": "b22faea742e58251335ee5d9fba248772607800f",
    "tarball": "https://registry.npmjs.org/@plotly/d3-sankey/-/d3-sankey-0.5.0.tgz"
  },
  "gitHead": "8bafed6f435fd7e56516ab829247fe09baf22e60",
  "homepage": "https://github.com/d3/d3-sankey",
  "jsnext:main": "index",
  "keywords": [
    "d3",
    "d3-module",
    "sankey"
  ],
  "license": "BSD-3-Clause",
  "main": "build/d3-sankey.js",
  "maintainers": [
    {
      "name": "plotly",
      "email": "ben@plot.ly"
    }
  ],
  "module": "index",
  "name": "@plotly/d3-sankey",
  "optionalDependencies": {},
  "readme": "# d3-sankey\n\nD3 4.0 implementation of the Sankey plugin to visualize the flow between nodes in a directed acyclic network.\n\n## Installing\n\nIf you use NPM, `npm install d3-sankey`. Otherwise, download the [latest release](https://github.com/d3/d3-sankey/releases/latest).\n\nYou can also load directly from unpkg.\n\n```javascript\n<script src=\"https://d3js.org/d3.v4.js\"></script>\n<script src=\"https://unpkg.com/d3-sankey@0\"></script>\n<script>\n\nvar sankey = d3.sankey();\n\n</script>\n```\n\n## Demo\nHere is Mike Bostock's famous example [recreated with d3-sankey](http://bl.ocks.org/xaranke/9ada4c74a87b57ae7308).\n\nClone or download the block, then run `npm install` and `npm run build` to create `d3.min.js`.  \n\n## API Reference\n\n<a href=\"#sankey\" name=\"sankey\">#</a> <b>sankey</b>()\n\nConstructs a new sankey generator with the default settings.\n\n<a name=\"sankey_nodeWidth\" href=\"#sankey_nodeWidth\">#</a> <i>sankey</i>.<b>nodeWidth</b>([<i>width</i>])\n\nIf <i>width</i> is specified, sets the node width to the specified function or number and returns this sankey generator. If <i>width</i> is not specified, returns the current node width accessor, which defaults to:\n\n```js\nfunction nodeWidth() {\n  return 24;\n}\n```\n\n<a name=\"sankey_nodePadding\" href=\"#sankey_nodePadding\">#</a> <i>sankey</i>.<b>nodePadding</b>([<i>padding</i>])\n\nIf <i>padding</i> is specified, sets the node padding to the specified function or number and returns this sankey generator. If <i>padding</i> is not specified, returns the current node padding accessor, which defaults to:\n\n```js\nfunction nodePadding() {\n  return 8;\n}\n```\nHere padding refers to the vertical space between nodes that occupy the same horizontal space.\n\n<a name=\"sankey_nodes\" href=\"#sankey_nodes\">#</a> <i>sankey</i>.<b>nodes</b>([<i>nodes</i>])\n\nIf <i>nodes</i> is specified, sets the list of nodes to the specified function or array and returns this sankey generator. If <i>nodes</i> is not specified, returns the current accessor to the list of nodes, which defaults to:\n\n```js\nfunction nodes() {\n  return [];\n}\n```\n\n<a name=\"sankey_links\" href=\"#sankey_links\">#</a> <i>sankey</i>.<b>links</b>([<i>links</i>])\n\nIf <i>links</i> is specified, sets the list of links to the specified function or array and returns this sankey generator. If <i>links</i> is not specified, returns the current accessor to the list of links, which defaults to:\n\n```js\nfunction links() {\n  return [];\n}\n```\n\n<a name=\"sankey_layout\" href=\"#sankey_layout\">#</a> <i>sankey</i>.<b>layout</b>([<i>iterations</i>])\n\nReturns the current accessor to the SVG layout object. Here <i>iterations</i> is the number of times the converging function <b>computeNodeDepths</b> is run.\n\n<a name=\"sankey_relayout\" href=\"#sankey_relayout\">#</a> <i>sankey</i>.<b>relayout</b>()\n\nSimilar to <b>layout</b> but only recalculates the depth of links. Primarily used when a node is moved vertically.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/d3/d3-sankey.git"
  },
  "scripts": {
    "postpublish": "git push && git push --tags && zip -j build/d3-sankey.zip -- LICENSE README.md build/d3-sankey.js build/d3-sankey.min.js",
    "prepublish": "npm run test && uglifyjs --preamble \"$(preamble)\" build/d3-sankey.js -c -m -o build/d3-sankey.min.js",
    "pretest": "rm -rf build && mkdir build && rollup --banner \"$(preamble)\" -g d3-array:d3,d3-collection:d3,d3-interpolate:d3 -f umd -n d3 -o build/d3-sankey.js -- index.js",
    "test": "tape 'test/**/*-test.js' && eslint index.js src"
  },
  "version": "0.5.0"
}
