{
  "_args": [
    [
      {
        "raw": "cubic-hermite@^1.0.0",
        "scope": null,
        "escapedName": "cubic-hermite",
        "name": "cubic-hermite",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/home/italove/Projects/ToT/node_modules/filtered-vector"
    ]
  ],
  "_from": "cubic-hermite@>=1.0.0 <2.0.0",
  "_id": "cubic-hermite@1.0.0",
  "_inCache": true,
  "_location": "/cubic-hermite",
  "_npmUser": {
    "name": "mikolalysenko",
    "email": "mikolalysenko@gmail.com"
  },
  "_npmVersion": "1.4.3",
  "_phantomChildren": {},
  "_requested": {
    "raw": "cubic-hermite@^1.0.0",
    "scope": null,
    "escapedName": "cubic-hermite",
    "name": "cubic-hermite",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/filtered-vector"
  ],
  "_resolved": "https://registry.npmjs.org/cubic-hermite/-/cubic-hermite-1.0.0.tgz",
  "_shasum": "84e3b2f272b31454e8393b99bb6aed45168c14e5",
  "_shrinkwrap": null,
  "_spec": "cubic-hermite@^1.0.0",
  "_where": "/home/italove/Projects/ToT/node_modules/filtered-vector",
  "author": {
    "name": "Mikola Lysenko"
  },
  "bugs": {
    "url": "https://github.com/mikolalysenko/cubic-hermite/issues"
  },
  "dependencies": {},
  "description": "Cubic hermite interpolation",
  "devDependencies": {
    "tape": "^2.12.3"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "84e3b2f272b31454e8393b99bb6aed45168c14e5",
    "tarball": "https://registry.npmjs.org/cubic-hermite/-/cubic-hermite-1.0.0.tgz"
  },
  "gitHead": "d971c7ff8f94b260fc96da41c4497fa87d3a07b4",
  "homepage": "https://github.com/mikolalysenko/cubic-hermite#readme",
  "keywords": [
    "spline",
    "position",
    "velocity",
    "interpolation",
    "point",
    "particle",
    "game",
    "physics",
    "numerical",
    "method",
    "math"
  ],
  "license": "MIT",
  "main": "hermite.js",
  "maintainers": [
    {
      "name": "mikolalysenko",
      "email": "mikolalysenko@gmail.com"
    }
  ],
  "name": "cubic-hermite",
  "optionalDependencies": {},
  "readme": "cubic-hermite\n=============\n[Cubic hermite spline](http://en.wikipedia.org/wiki/Cubic_Hermite_spline) for interpolating position/velocity pairs.  Simplest quick and dirty way to get a smooth path between points\n\n## Install\n\n    npm install cubic-hermite\n    \n## Example\n\n```javascript\nvar hermite = require(\"cubic-hermite\")\n\n//Compute intial position and velocity\nvar initial_position = [0, 1]\n  , initial_velocity = [1, 0]\n  , final_positions  = [1, 0]\n  , final_velocity   = [0, 1]\n  \n//Plot curve\nfor(var t=0.0; t<1.0; t+=0.1) {\n  console.log(hermite(initial_position, initial_velocity, final_position, final_velocity, t))\n}\n```\n\n## API\n\n### `require(\"cubic-hermite\")(p0, v0, p1, v1, t[, result])`\nComputes an interpolated position between initial and final configurations at time t.  Arguments can be either scalars or arrays\n\n* `p0` is the initial position\n* `v0` is the initial velocity\n* `p1` is the final position\n* `v1` is the final velocity\n* `t` is the point on the curve to interpolate to in the range [0,1]\n* `result` is a vector that gets the result of the interpolation (if not specified, a new vector is created)\n\n**Returns** The interpolated point on the curve\n\n### `require(\"cubic-hermite\").derivative(p0, v0, p1, v1, t[, result])`\nReturns the velocity along the curve at a point t\n\n* `p0` is the initial position\n* `v0` initial velocity\n* `p1` final position\n* `v1` final velocity\n* `t` point on the curve to interpolate to, in the range [0,1]\n* `result` stores the result of the interpolation.  (if not specified, is reallocated)\n\n**Returns** The interpolated velocity at the time `t`\n\n## Credits\n(c) 2013 Mikola Lysenko. MIT License",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/cubic-hermite.git"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "version": "1.0.0"
}
