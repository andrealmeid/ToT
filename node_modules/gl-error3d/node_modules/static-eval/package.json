{
  "_args": [
    [
      {
        "raw": "static-eval@^1.1.1",
        "scope": null,
        "escapedName": "static-eval",
        "name": "static-eval",
        "rawSpec": "^1.1.1",
        "spec": ">=1.1.1 <2.0.0",
        "type": "range"
      },
      "/home/italove/Projects/ToT/node_modules/gl-error3d/node_modules/glslify"
    ]
  ],
  "_from": "static-eval@>=1.1.1 <2.0.0",
  "_id": "static-eval@1.1.1",
  "_inCache": true,
  "_location": "/gl-error3d/static-eval",
  "_nodeVersion": "6.3.1",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/static-eval-1.1.1.tgz_1475078052162_0.18367574457079172"
  },
  "_npmUser": {
    "name": "substack",
    "email": "substack@gmail.com"
  },
  "_npmVersion": "3.10.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "static-eval@^1.1.1",
    "scope": null,
    "escapedName": "static-eval",
    "name": "static-eval",
    "rawSpec": "^1.1.1",
    "spec": ">=1.1.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/gl-error3d/glslify"
  ],
  "_resolved": "https://registry.npmjs.org/static-eval/-/static-eval-1.1.1.tgz",
  "_shasum": "ca8130210354cf13d9a722bc7e923778457bb192",
  "_shrinkwrap": null,
  "_spec": "static-eval@^1.1.1",
  "_where": "/home/italove/Projects/ToT/node_modules/gl-error3d/node_modules/glslify",
  "author": {
    "name": "James Halliday",
    "email": "mail@substack.net",
    "url": "http://substack.net"
  },
  "bugs": {
    "url": "https://github.com/substack/static-eval/issues"
  },
  "dependencies": {
    "escodegen": "^1.8.1"
  },
  "description": "evaluate statically-analyzable expressions",
  "devDependencies": {
    "esprima": "^2.7.3",
    "tape": "^4.6.0"
  },
  "directories": {},
  "dist": {
    "shasum": "ca8130210354cf13d9a722bc7e923778457bb192",
    "tarball": "https://registry.npmjs.org/static-eval/-/static-eval-1.1.1.tgz"
  },
  "gitHead": "ab81134a43431457508bc2ead500f2d93ac0a71d",
  "homepage": "https://github.com/substack/static-eval",
  "keywords": [
    "static",
    "eval",
    "expression",
    "esprima",
    "ast",
    "abstract",
    "syntax",
    "tree",
    "analysis"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "ahdinosaur",
      "email": "michael.williams@enspiral.com"
    },
    {
      "name": "substack",
      "email": "substack@gmail.com"
    }
  ],
  "name": "static-eval",
  "optionalDependencies": {},
  "readme": "# static-eval\n\nevaluate statically-analyzable expressions\n\n[![testling badge](https://ci.testling.com/substack/static-eval.png)](https://ci.testling.com/substack/static-eval)\n\n[![build status](https://secure.travis-ci.org/substack/static-eval.png)](http://travis-ci.org/substack/static-eval)\n\n# example\n\n``` js\nvar evaluate = require('static-eval');\nvar parse = require('esprima').parse;\n\nvar src = process.argv[2];\nvar ast = parse(src).body[0].expression;\n\nconsole.log(evaluate(ast));\n```\n\nIf you stick to simple expressions, the result is statically analyzable:\n\n```\n$ node '7*8+9'\n65\n$ node eval.js '[1,2,3+4*5-(5*11)]'\n[ 1, 2, -32 ]\n```\n\nbut if you use statements, undeclared identifiers, or syntax, the result is no\nlonger statically analyzable and `evaluate()` returns `undefined`:\n\n```\n$ node eval.js '1+2+3*n'\nundefined\n$ node eval.js 'x=5; x*2'\nundefined\n$ node eval.js '5-4*3'\n-7\n```\n\nYou can also declare variables and functions to use in the static evaluation:\n\n``` js\nvar evaluate = require('static-eval');\nvar parse = require('esprima').parse;\n\nvar src = '[1,2,3+4*10+n,foo(3+5),obj[\"\"+\"x\"].y]';\nvar ast = parse(src).body[0].expression;\n\nconsole.log(evaluate(ast, {\n    n: 6,\n    foo: function (x) { return x * 100 },\n    obj: { x: { y: 555 } }\n}));\n```\n\n# methods\n\n``` js\nvar evaluate = require('static-eval');\n```\n\n## evaluate(ast, vars={})\n\nEvaluate the [esprima](https://npmjs.org/package/esprima)-parsed abstract syntax\ntree object `ast` with an optional collection of variables `vars` to use in the\nstatic expression resolution.\n\nIf the expression contained in `ast` can't be statically resolved, `evaluate()`\nreturns undefined.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install static-eval\n```\n\n# license\n\nMIT\n",
  "readmeFilename": "readme.markdown",
  "repository": {
    "type": "git",
    "url": "git://github.com/substack/static-eval.git"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "testling": {
    "files": "test/*.js",
    "browsers": [
      "ie/8..latest",
      "ff/latest",
      "chrome/latest",
      "opera/latest",
      "safari/latest"
    ]
  },
  "version": "1.1.1"
}
