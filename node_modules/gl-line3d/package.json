{
  "_args": [
    [
      {
        "raw": "gl-line3d@^1.1.0",
        "scope": null,
        "escapedName": "gl-line3d",
        "name": "gl-line3d",
        "rawSpec": "^1.1.0",
        "spec": ">=1.1.0 <2.0.0",
        "type": "range"
      },
      "/home/italove/Projects/ToT/node_modules/plotly.js"
    ]
  ],
  "_from": "gl-line3d@>=1.1.0 <2.0.0",
  "_id": "gl-line3d@1.1.0",
  "_inCache": true,
  "_location": "/gl-line3d",
  "_nodeVersion": "0.12.2",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/gl-line3d-1.1.0.tgz_1458948276908_0.02795244217850268"
  },
  "_npmUser": {
    "name": "mikolalysenko",
    "email": "mikolalysenko@gmail.com"
  },
  "_npmVersion": "2.13.1",
  "_phantomChildren": {
    "glsl-inject-defines": "1.0.3",
    "glsl-resolve": "0.0.1",
    "glsl-token-defines": "1.0.0",
    "glsl-token-depth": "1.1.2",
    "glsl-token-descope": "1.0.2",
    "glsl-token-scope": "1.1.2",
    "glsl-token-string": "1.0.1",
    "glsl-tokenizer": "2.1.2",
    "glslify-deps": "1.3.0",
    "minimist": "1.2.0",
    "readable-stream": "1.0.34",
    "resolve": "1.3.3",
    "static-module": "1.3.2",
    "through2": "0.6.5",
    "xtend": "4.0.1"
  },
  "_requested": {
    "raw": "gl-line3d@^1.1.0",
    "scope": null,
    "escapedName": "gl-line3d",
    "name": "gl-line3d",
    "rawSpec": "^1.1.0",
    "spec": ">=1.1.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/plotly.js"
  ],
  "_resolved": "https://registry.npmjs.org/gl-line3d/-/gl-line3d-1.1.0.tgz",
  "_shasum": "e8ae956b897f130fb1d58798fadf74bf9a21ab9b",
  "_shrinkwrap": null,
  "_spec": "gl-line3d@^1.1.0",
  "_where": "/home/italove/Projects/ToT/node_modules/plotly.js",
  "author": {
    "name": "Mikola Lysenko"
  },
  "browserify": {
    "transform": [
      "glslify"
    ]
  },
  "bugs": {
    "url": "https://github.com/gl-vis/gl-line3d/issues"
  },
  "dependencies": {
    "binary-search-bounds": "^1.0.0",
    "gl-buffer": "^2.0.8",
    "gl-shader": "^4.0.4",
    "gl-texture2d": "^2.0.2",
    "gl-vao": "^1.1.3",
    "glsl-read-float": "^1.0.0",
    "glslify": "^2.1.2",
    "ndarray": "^1.0.16"
  },
  "description": "3D line plot",
  "devDependencies": {
    "game-shell-orbit-camera": "^1.0.0",
    "gl-axes": "^2.3.0",
    "gl-matrix": "^2.1.0",
    "gl-now": "^1.3.1",
    "gl-spikes": "^1.0.0"
  },
  "directories": {
    "example": "example"
  },
  "dist": {
    "shasum": "e8ae956b897f130fb1d58798fadf74bf9a21ab9b",
    "tarball": "https://registry.npmjs.org/gl-line3d/-/gl-line3d-1.1.0.tgz"
  },
  "gitHead": "d85cf853c443c0fe9f28da93f9d9cbc3b39033e2",
  "homepage": "https://github.com/gl-vis/gl-line3d",
  "keywords": [
    "3d",
    "webgl",
    "line",
    "plot"
  ],
  "license": "MIT",
  "main": "lines.js",
  "maintainers": [
    {
      "name": "bpostlethwaite",
      "email": "post.ben.here@gmail.com"
    },
    {
      "name": "etpinard",
      "email": "etienne.t.pinard@gmail.com"
    },
    {
      "name": "mikolalysenko",
      "email": "mikolalysenko@gmail.com"
    }
  ],
  "name": "gl-line3d",
  "optionalDependencies": {},
  "readme": "gl-line3d\n============\nA 3D WebGL line plot\n\n# Example\n\n[Try it out in your browser](http://gl-vis.github.io/gl-line3d)\n\n```javascript\nvar createScene = require('gl-plot3d')\nvar createLine  = require('gl-line3d')\n\n//Create the scene\nvar scene = createScene()\n\n//Create a helix\nvar polyline = []\nfor(var i=0; i<100; ++i) {\n  var theta = (i / 100.0) * Math.PI\n  polyline.push([\n      Math.cos(3*theta),\n      Math.sin(3*theta),\n      (i/50) - 1.0\n    ])\n}\n\n//Create the line plot\nvar lines = createLines({\n  gl:       scene.gl,\n  position: polyline,\n  color:    [1,0,0]\n})\n\n//Add the lines to the scene\nscene.add(lines)\n```\n\n# Install\n\n```\nnpm install gl-line3d\n```\n\n# Basic interface\n\n## Constructor\n\n#### `var lines = require('gl-line3d')(options)\nCreates a new line plot\n\n* `options.gl` A WebGL context\n* `options.position` An array of position values for the points on the curve\n* `options.color` An array of color values (or a singular color) for the curve\n* `options.pickId` The selection ID for the line plot\n* `options.lineWidth` The width of the line\n* `options.dashes` An array of dash patterns representing the dash pattern.  For example, `[0.5,0.5,0.5]`\n* `options.dashScale` The number of times to repeat the dash pattern\n* `options.opacity` The opacity of the lines\n\n## Updating\n\n#### `lines.update(options)`\nUpdates the plot.  `options` has the same properties as in the constructor\n\n## Properties\n\n#### `lines.lineWidth`\nThe width of the lines\n\n# Credits\n(c) 2014 Mikola Lysenko. MIT License\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/gl-vis/gl-line3d.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.1.0"
}
