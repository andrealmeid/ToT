{
  "_args": [
    [
      {
        "raw": "gl-spikes3d@^1.0.3",
        "scope": null,
        "escapedName": "gl-spikes3d",
        "name": "gl-spikes3d",
        "rawSpec": "^1.0.3",
        "spec": ">=1.0.3 <2.0.0",
        "type": "range"
      },
      "/home/italove/Projects/ToT/node_modules/gl-plot3d"
    ]
  ],
  "_from": "gl-spikes3d@>=1.0.3 <2.0.0",
  "_id": "gl-spikes3d@1.0.5",
  "_inCache": true,
  "_location": "/gl-spikes3d",
  "_nodeVersion": "0.12.2",
  "_npmUser": {
    "name": "mikolalysenko",
    "email": "mikolalysenko@gmail.com"
  },
  "_npmVersion": "2.12.1",
  "_phantomChildren": {
    "glsl-inject-defines": "1.0.3",
    "glsl-resolve": "0.0.1",
    "glsl-token-defines": "1.0.0",
    "glsl-token-depth": "1.1.2",
    "glsl-token-descope": "1.0.2",
    "glsl-token-scope": "1.1.2",
    "glsl-token-string": "1.0.1",
    "glsl-tokenizer": "2.1.2",
    "glslify-deps": "1.3.0",
    "minimist": "1.2.0",
    "readable-stream": "1.0.34",
    "resolve": "1.3.3",
    "static-module": "1.3.2",
    "through2": "0.6.5",
    "xtend": "4.0.1"
  },
  "_requested": {
    "raw": "gl-spikes3d@^1.0.3",
    "scope": null,
    "escapedName": "gl-spikes3d",
    "name": "gl-spikes3d",
    "rawSpec": "^1.0.3",
    "spec": ">=1.0.3 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/gl-plot3d"
  ],
  "_resolved": "https://registry.npmjs.org/gl-spikes3d/-/gl-spikes3d-1.0.5.tgz",
  "_shasum": "697e9f2ea7597be41aba47bda119b95f48ca157d",
  "_shrinkwrap": null,
  "_spec": "gl-spikes3d@^1.0.3",
  "_where": "/home/italove/Projects/ToT/node_modules/gl-plot3d",
  "author": {
    "name": "Mikola Lysenko"
  },
  "browserify": {
    "transform": [
      "glslify"
    ]
  },
  "bugs": {
    "url": "https://github.com/gl-vis/gl-spikes3d/issues"
  },
  "dependencies": {
    "gl-buffer": "^2.1.2",
    "gl-shader": "^4.0.4",
    "gl-vao": "^1.2.1",
    "glslify": "^2.1.2"
  },
  "description": "gl-spikes3d =========== Draws axis spikes compatible with gl-axes3d.  This can be useful to illustrate selections or specific points in a point cloud",
  "devDependencies": {
    "beefy": "~1.1.0",
    "game-shell-orbit-camera": "~0.0.0",
    "gl-matrix": "^2.1.0",
    "gl-now": "~1.3.1",
    "gl-state": "^1.0.0"
  },
  "directories": {
    "example": "example"
  },
  "dist": {
    "shasum": "697e9f2ea7597be41aba47bda119b95f48ca157d",
    "tarball": "https://registry.npmjs.org/gl-spikes3d/-/gl-spikes3d-1.0.5.tgz"
  },
  "gitHead": "d22c7a62deec8042020f0e5bc1dbc52d28920250",
  "homepage": "https://github.com/gl-vis/gl-spikes3d",
  "license": "MIT",
  "main": "spikes.js",
  "maintainers": [
    {
      "name": "mikolalysenko",
      "email": "mikolalysenko@gmail.com"
    },
    {
      "name": "bpostlethwaite",
      "email": "post.ben.here@gmail.com"
    }
  ],
  "name": "gl-spikes3d",
  "optionalDependencies": {},
  "readme": "gl-spikes3d\n===========\nDraws axis spikes compatible with gl-axes3d.  This can be useful to illustrate selections or specific points in a point cloud\n\n## Example\n\n[Try it out here](https://mikolalysenko.github.io/gl-spikes)\n\n```javascript\nvar shell = require(\"gl-now\")({ clearColor: [0,0,0,0], tickRate: 5 })\nvar camera = require(\"game-shell-orbit-camera\")(shell)\nvar mat4 = require(\"gl-matrix\").mat4\nvar createAxes = require(\"gl-axes\")\nvar createSpikes = require(\"gl-spikes\")\n\n//Bounds on function to plot\nvar bounds = [[-1,-1,-1], [1,1,1]]\n\n//camera.lookAt([-15,20,-15], [0,0,0], [0, 1, 0])\ncamera.lookAt([2, 2, 2], [0,0,0], [0,1,0])\n\n//State variables\nvar axes, spikes\n\nshell.on(\"gl-init\", function() {\n  var gl = shell.gl\n  \n  axes = createAxes(gl, {\n    bounds: bounds,\n    tickSpacing: [0.1,0.1,0.1],\n    textSize: 0.05\n  })\n\n  spikes = createSpikes(gl, {\n    bounds: bounds,\n    colors: [[1,0,0,1], [0,1,0,1], [0,0,1,1]],\n    position: [0,0,0]\n  })\n})\n\nshell.on(\"gl-render\", function() {\n  var gl = shell.gl\n  gl.enable(gl.DEPTH_TEST)\n\n  //Compute camera parameters\n  var cameraParameters = {\n    view: camera.view(),\n    projection: mat4.perspective(\n        mat4.create(),\n        Math.PI/4.0,\n        shell.width/shell.height,\n        0.1,\n        1000.0)\n  }\n\n\n  //Update spike position\n  var t = 0.001*Date.now()\n  spikes.position = [Math.cos(t), Math.sin(t), Math.cos(2*t+0.1)]\n\n  //Draw objects\n  axes.draw(cameraParameters)\n  spikes.draw(cameraParameters)\n})\n```\n\n## Install\n\n```\nnpm install gl-spikes\n```\n\n## API\n\n### `var spikes = require('gl-spikes')(gl, options)`\nCreates a new spike object.\n\n* `gl` is a WebGL context\n* `options` is a list of optional parameters which are passed along\n\n### Methods\n\n#### `spikes.draw(camera)`\nDraws the axis spikes using the given camera coordinates.\n\n* `camera.model` is the model matrix for the camera\n* `camera.view` is the view matrix\n* `camera.projection` is the projection matrix\n\n#### `spikes.update(options)`\nUpdates the parameters of the axes spikes. `options` is an object with the following properties:\n\n* `position` the position of the spike ball in data coordinates\n* `bounds` the bounds of the axes object\n* `colors` an array of 3 length 4 arrays encoding the RGBA colors for the spikes along the x/y/z directions\n* `enabled` an array of 3 flags which if set turns on or off the spikes\n* `drawSides` an array of 3 flag which if set turns on or off the projected spikes in each data plane\n* `lineWidth` an array of 3 numbers giving the thickness of the spikes for each axis\n\n#### `spikes.dispose()`\nDestroys the spike object and releases all associated resources.\n\n## Credits\n(c) 2014 Mikola Lysenko. MIT License",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/gl-vis/gl-spikes3d.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.0.5"
}
