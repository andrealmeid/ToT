{
  "_args": [
    [
      {
        "raw": "glsl-inject-defines@^1.0.1",
        "scope": null,
        "escapedName": "glsl-inject-defines",
        "name": "glsl-inject-defines",
        "rawSpec": "^1.0.1",
        "spec": ">=1.0.1 <2.0.0",
        "type": "range"
      },
      "/home/italove/Projects/ToT/node_modules/glslify-bundle"
    ]
  ],
  "_from": "glsl-inject-defines@>=1.0.1 <2.0.0",
  "_id": "glsl-inject-defines@1.0.3",
  "_inCache": true,
  "_location": "/glsl-inject-defines",
  "_nodeVersion": "0.10.32",
  "_npmUser": {
    "name": "mattdesl",
    "email": "dave.des@gmail.com"
  },
  "_npmVersion": "2.1.18",
  "_phantomChildren": {},
  "_requested": {
    "raw": "glsl-inject-defines@^1.0.1",
    "scope": null,
    "escapedName": "glsl-inject-defines",
    "name": "glsl-inject-defines",
    "rawSpec": "^1.0.1",
    "spec": ">=1.0.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/gl-axes3d/glslify-bundle",
    "/gl-error2d/glslify-bundle",
    "/gl-error3d/glslify-bundle",
    "/gl-line2d/glslify-bundle",
    "/gl-line3d/glslify-bundle",
    "/gl-mesh3d/glslify-bundle",
    "/gl-plot2d/glslify-bundle",
    "/gl-plot3d/glslify-bundle",
    "/gl-pointcloud2d/glslify-bundle",
    "/gl-scatter2d-sdf/glslify-bundle",
    "/gl-scatter2d/glslify-bundle",
    "/gl-scatter3d/glslify-bundle",
    "/gl-select-box/glslify-bundle",
    "/gl-spikes3d/glslify-bundle",
    "/gl-surface3d/glslify-bundle",
    "/glslify-bundle"
  ],
  "_resolved": "https://registry.npmjs.org/glsl-inject-defines/-/glsl-inject-defines-1.0.3.tgz",
  "_shasum": "dd1aacc2c17fcb2bd3fc32411c6633d0d7b60fd4",
  "_shrinkwrap": null,
  "_spec": "glsl-inject-defines@^1.0.1",
  "_where": "/home/italove/Projects/ToT/node_modules/glslify-bundle",
  "author": {
    "name": "Matt DesLauriers",
    "email": "dave.des@gmail.com",
    "url": "http://github.com/mattdesl"
  },
  "bugs": {
    "url": "https://github.com/mattdesl/glsl-inject-defines/issues"
  },
  "dependencies": {
    "glsl-token-inject-block": "^1.0.0",
    "glsl-token-string": "^1.0.1",
    "glsl-tokenizer": "^2.0.2"
  },
  "description": "injects a #define statement into a shader source",
  "devDependencies": {
    "faucet": "0.0.1",
    "tape": "^4.0.0"
  },
  "directories": {},
  "dist": {
    "shasum": "dd1aacc2c17fcb2bd3fc32411c6633d0d7b60fd4",
    "tarball": "https://registry.npmjs.org/glsl-inject-defines/-/glsl-inject-defines-1.0.3.tgz"
  },
  "gitHead": "6a813e550553b18d3f4f88855558d810cb266084",
  "homepage": "https://github.com/mattdesl/glsl-inject-defines",
  "keywords": [
    "ecosystem:stackgl",
    "inject",
    "define",
    "shader",
    "stackgl",
    "webgl",
    "shader",
    "glsl"
  ],
  "license": "MIT",
  "main": "string.js",
  "maintainers": [
    {
      "name": "mattdesl",
      "email": "dave.des@gmail.com"
    }
  ],
  "name": "glsl-inject-defines",
  "optionalDependencies": {},
  "readme": "# glsl-inject-defines\n\n[![stable](http://badges.github.io/stability-badges/dist/stable.svg)](http://github.com/badges/stability-badges)\n\nSafely inject `#define` statements into a shader source. \n\nIf the shader contains any `#version` or `#extension` statements, the defines are added after them. \n\n## Example\n\n```glsl\n// Your cool shader\n#version 330\n#extension GL_OES_standard_derivatives : enable\n\nvoid main() {\n  #ifdef BLUE\n    gl_FragColor = vec4(0.0, 0.0, 1.0, 1.0);\n  #else\n    gl_FragColor = vec4(0.0);\n  #endif\n}\n```\n\nYou can process it at runtime, like so:\n\n```js\nvar injectDefines = require('glsl-inject-defines')\nvar fs = require('fs')\n\nvar source = fs.readFileSync(__dirname + '/shader.glsl', 'utf8')\n\nvar transformed = injectDefines(source, {\n  PI: 3.14,\n  BLUE: ''\n})\nconsole.log(transformed)\n```\n\nThe resulting shader:\n\n```glsl\n// Your cool shader\n#version 330\n#extension GL_OES_standard_derivatives : enable\n#define PI 3.14\n#define BLUE \n\nvoid main() {\n  #ifdef BLUE\n    gl_FragColor = vec4(0.0, 0.0, 1.0, 1.0);\n  #else\n    gl_FragColor = vec4(0.0);\n  #endif\n}\n```\n\nWorks in the browser with browserify and [glslify](https://www.npmjs.com/package/glslify).\n\n## Install\n\n```sh\nnpm install glsl-inject-defines\n```\n\n## Usage\n\n[![NPM](https://nodei.co/npm/glsl-inject-defines.png)](https://www.npmjs.com/package/glsl-inject-defines)\n\n#### `newSource = injectDefines(source, defines)`\n\nInjects the set of `defines`, an object with `<name, value>` pairs that will get turned into strings for the shader source.\n\nReturns the transformed source, with defines injected after extension and version statements.\n\n## License\n\nMIT. See [LICENSE.md](http://github.com/stackgl/glsl-inject-defines/blob/master/LICENSE.md) for details.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mattdesl/glsl-inject-defines.git"
  },
  "scripts": {
    "test": "node test/test.js | faucet"
  },
  "version": "1.0.3"
}
