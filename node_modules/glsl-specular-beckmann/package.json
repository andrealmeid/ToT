{
  "_args": [
    [
      {
        "raw": "glsl-specular-beckmann@^1.1.1",
        "scope": null,
        "escapedName": "glsl-specular-beckmann",
        "name": "glsl-specular-beckmann",
        "rawSpec": "^1.1.1",
        "spec": ">=1.1.1 <2.0.0",
        "type": "range"
      },
      "/home/italove/Projects/ToT/node_modules/glsl-specular-cook-torrance"
    ]
  ],
  "_from": "glsl-specular-beckmann@>=1.1.1 <2.0.0",
  "_id": "glsl-specular-beckmann@1.1.2",
  "_inCache": true,
  "_location": "/glsl-specular-beckmann",
  "_nodeVersion": "0.10.26",
  "_npmUser": {
    "name": "mikolalysenko",
    "email": "mikolalysenko@gmail.com"
  },
  "_npmVersion": "2.1.4",
  "_phantomChildren": {},
  "_requested": {
    "raw": "glsl-specular-beckmann@^1.1.1",
    "scope": null,
    "escapedName": "glsl-specular-beckmann",
    "name": "glsl-specular-beckmann",
    "rawSpec": "^1.1.1",
    "spec": ">=1.1.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/gl-surface3d",
    "/glsl-specular-cook-torrance"
  ],
  "_resolved": "https://registry.npmjs.org/glsl-specular-beckmann/-/glsl-specular-beckmann-1.1.2.tgz",
  "_shasum": "fce9056933ecdf2456278376a54d082893e775f1",
  "_shrinkwrap": null,
  "_spec": "glsl-specular-beckmann@^1.1.1",
  "_where": "/home/italove/Projects/ToT/node_modules/glsl-specular-cook-torrance",
  "author": {
    "name": "Mikola Lysenko"
  },
  "browserify": {
    "transform": "glslify"
  },
  "bugs": {
    "url": "https://github.com/stackgl/glsl-specular-beckmann/issues"
  },
  "dependencies": {},
  "description": "Beckmann specular distribution for GLSL",
  "devDependencies": {
    "a-big-triangle": "^1.0.0",
    "beefy": "^2.1.1",
    "glslify": "^1.6.0"
  },
  "directories": {
    "example": "example"
  },
  "dist": {
    "shasum": "fce9056933ecdf2456278376a54d082893e775f1",
    "tarball": "https://registry.npmjs.org/glsl-specular-beckmann/-/glsl-specular-beckmann-1.1.2.tgz"
  },
  "gitHead": "4134f2e67a9ab27ad08eacff3d0466521150ec59",
  "homepage": "https://github.com/stackgl/glsl-specular-beckmann",
  "keywords": [
    "beckmann",
    "specular",
    "distribution",
    "power",
    "glsl",
    "highlight",
    "shiny",
    "glslify"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mikolalysenko",
      "email": "mikolalysenko@gmail.com"
    }
  ],
  "name": "glsl-specular-beckmann",
  "optionalDependencies": {},
  "readme": "# glsl-specular-beckmann\nComputes the specular power from the Beckmann distribution\n\n# Example\n\n```glsl\n#pragma glslify: beckmann = require(glsl-specular-beckmann)\n\nuniform vec3 eyePosition;\nuniform vec3 lightPosition;\n\nuniform float roughness;\n\nvarying vec3 surfacePosition;\nvarying vec3 surfaceNormal;\n\nvoid main() {\n  vec3 eyeDirection = normalize(eyePosition - surfacePosition);\n  vec3 lightDirection = normalize(lightPosition - surfacePosition);\n  vec3 normal = normalize(surfaceNormal);\n\n  float power = beckmann(lightDirection, viewDirection, normal, roughness);\n\n  gl_FragColor = vec4(power,power,power,1.0);\n}\n```\n\n# Usage\n\nInstall with npm:\n\n```\nnpm install glsl-specular-beckmann\n```\n\nThen use with [glslify](https://github.com/stackgl/glslify).\n\n# API\n\n```glsl\n#pragma glslify: beckmann = require(glsl-specular-beckmann)\n```\n\n##### `float beckmann(vec3 lightDir, vec3 eyeDir, vec3 normal, float shininess)`\nComputes the specular power in the Beckmann model\n\n* `lightDir` is a *unit length* `vec3` pointing from the surface point toward the light\n* `eyeDir` is a *unit length* `vec3` pointing from the surface point toward the camera\n* `normal` is the surface normal at the sample point\n* `roughness` is a parameter between 0 and 1 measuring the surface roughness.  Small values are shinier, larger values are rougher.\n\n**Returns** A `float` representing the specular power\n\n# License\n(c) 2014 Mikola Lysenko. MIT License",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/stackgl/glsl-specular-beckmann.git"
  },
  "scripts": {
    "test": "beefy example/example.js --open"
  },
  "version": "1.1.2"
}
