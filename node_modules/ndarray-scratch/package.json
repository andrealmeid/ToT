{
  "_args": [
    [
      {
        "raw": "ndarray-scratch@^1.1.1",
        "scope": null,
        "escapedName": "ndarray-scratch",
        "name": "ndarray-scratch",
        "rawSpec": "^1.1.1",
        "spec": ">=1.1.1 <2.0.0",
        "type": "range"
      },
      "/home/italove/Projects/ToT/node_modules/gl-surface3d"
    ]
  ],
  "_from": "ndarray-scratch@>=1.1.1 <2.0.0",
  "_id": "ndarray-scratch@1.2.0",
  "_inCache": true,
  "_location": "/ndarray-scratch",
  "_nodeVersion": "0.12.2",
  "_npmUser": {
    "name": "mikolalysenko",
    "email": "mikolalysenko@gmail.com"
  },
  "_npmVersion": "2.13.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ndarray-scratch@^1.1.1",
    "scope": null,
    "escapedName": "ndarray-scratch",
    "name": "ndarray-scratch",
    "rawSpec": "^1.1.1",
    "spec": ">=1.1.1 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/gl-surface3d"
  ],
  "_resolved": "https://registry.npmjs.org/ndarray-scratch/-/ndarray-scratch-1.2.0.tgz",
  "_shasum": "6304636d62eba93db4727ac13c693341dba50e01",
  "_shrinkwrap": null,
  "_spec": "ndarray-scratch@^1.1.1",
  "_where": "/home/italove/Projects/ToT/node_modules/gl-surface3d",
  "author": {
    "name": "Mikola Lysenko"
  },
  "bugs": {
    "url": "https://github.com/mikolalysenko/ndarray-scratch/issues"
  },
  "dependencies": {
    "ndarray": "^1.0.14",
    "ndarray-ops": "^1.2.1",
    "typedarray-pool": "^1.0.2"
  },
  "description": "Pooled memory for ndarrays",
  "devDependencies": {
    "tape": "^2.13.1"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "shasum": "6304636d62eba93db4727ac13c693341dba50e01",
    "tarball": "https://registry.npmjs.org/ndarray-scratch/-/ndarray-scratch-1.2.0.tgz"
  },
  "gitHead": "65525b62e25c70355a09b362b7aa13183acd4964",
  "homepage": "https://github.com/mikolalysenko/ndarray-scratch#readme",
  "keywords": [
    "ndarray",
    "pool",
    "memory",
    "typedarray",
    "scratch",
    "malloc",
    "free"
  ],
  "license": "MIT",
  "main": "scratch.js",
  "maintainers": [
    {
      "name": "mikolalysenko",
      "email": "mikolalysenko@gmail.com"
    },
    {
      "name": "rreusser",
      "email": "rsreusser@gmail.com"
    },
    {
      "name": "planeshifter",
      "email": "pgb@andrew.cmu.edu"
    },
    {
      "name": "jaspervdg",
      "email": "th.v.d.gronde@hccnet.nl"
    },
    {
      "name": "hughsk",
      "email": "hughskennedy@gmail.com"
    },
    {
      "name": "substack",
      "email": "substack@gmail.com"
    }
  ],
  "name": "ndarray-scratch",
  "optionalDependencies": {},
  "readme": "ndarray-scratch\n===============\nA simple wrapper for typedarray-pool.  I got tired of manually constructing ndarrays from typedarrays, and so this module saves some keystrokes/sanity.\n\n[![testling badge](https://ci.testling.com/scijs/ndarray-scratch.png)](https://ci.testling.com/scijs/ndarray-scratch)\n\n[![build status](https://secure.travis-ci.org/scijs/ndarray-scratch.png)](http://travis-ci.org/scijs/ndarray-scratch)\n\n# Example\n\n```javascript\nvar pool = require(\"ndarray-scratch\")\n\n//Create a temporary typed array\nvar x = pool.malloc([100,100])\n\n//Do stuff with x\n\n//Release x\npool.free(x)\n```\n\n# Install\n\n    npm install ndarray-scratch\n\n# API\n\n```javascript\nvar pool = require(\"ndarray-pool\")\n```\n\n### `pool.malloc(shape[, dtype])`\nAllocates a temporary ndarray\n\n* `shape` is the shape of the array to allocate\n* `dtype` is the dtype of the array to allocate (default `\"double\"`)\n\n**Returns** a temporary ndarray\n\n### `pool.zeros(shape[,dtype])`\nCreates a scratch ndarray initialized to `0`\n\n* `shape` is the shape of the resulting array\n* `dtype` is the datatype of the array (default `\"double\"`)\n\n**Returns** A temporary ndarray initialized to 0\n\n### `pool.ones(shape[,dtype])`\nCreates a scratch ndarray initialized to `1`\n\n* `shape` is the shape of the resulting array\n* `dtype` is the datatype of the array (default `\"double\"`)\n\n**Returns** A temporary ndarray initialized to 1\n\n### `pool.eye(shape[,dtype])`\nCreates a scratch ndarray initialized to `1` if all indices equal, `0` otherwise.\n\n* `shape` is the shape of the resulting array\n* `dtype` is the datatype of the array (default `\"double\"`)\n\n**Returns** A temporary ndarray initialized to the identity matrix\n\n### `pool.free(array)`\nReleases a temporary ndarray\n\n* `array` is the ndarray to release.\n\n### `pool.clone(array)`\nCreates a copy of an ndarray with row-major order.\n\n* `array` is an ndarray\n\n**Returns** A temporary copy of `array`\n\n# Credits\n(c) 2013-2014 Mikola Lysenko. MIT License\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/ndarray-scratch.git"
  },
  "scripts": {
    "test": "tape test/*.js"
  },
  "testling": {
    "files": "test/*.js",
    "browsers": [
      "ie/10..latest",
      "firefox/17..latest",
      "firefox/nightly",
      "chrome/22..latest",
      "chrome/canary",
      "opera/12..latest",
      "opera/next",
      "safari/5.1..latest",
      "ipad/6.0..latest",
      "iphone/6.0..latest",
      "android-browser/4.2..latest"
    ]
  },
  "version": "1.2.0"
}
