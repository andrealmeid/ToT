{
  "_args": [
    [
      {
        "raw": "sane-topojson@^2.0.0",
        "scope": null,
        "escapedName": "sane-topojson",
        "name": "sane-topojson",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/home/italove/Projects/ToT/node_modules/plotly.js"
    ]
  ],
  "_from": "sane-topojson@>=2.0.0 <3.0.0",
  "_id": "sane-topojson@2.0.0",
  "_inCache": true,
  "_location": "/sane-topojson",
  "_nodeVersion": "6.9.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/sane-topojson-2.0.0.tgz_1477368912695_0.06405048398301005"
  },
  "_npmUser": {
    "name": "etpinard",
    "email": "etienne.t.pinard@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "sane-topojson@^2.0.0",
    "scope": null,
    "escapedName": "sane-topojson",
    "name": "sane-topojson",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/plotly.js"
  ],
  "_resolved": "https://registry.npmjs.org/sane-topojson/-/sane-topojson-2.0.0.tgz",
  "_shasum": "40e25736a28c4cceaaa233f45bb86373a2785b84",
  "_shrinkwrap": null,
  "_spec": "sane-topojson@^2.0.0",
  "_where": "/home/italove/Projects/ToT/node_modules/plotly.js",
  "author": {
    "name": "Étienne Tétreault-Pinard"
  },
  "bugs": {
    "url": "https://github.com/etpinard/sane-topojson/issues"
  },
  "dependencies": {},
  "description": "Ready-to-use multi-layer topojson files",
  "devDependencies": {
    "geojson-utils": "^1.1.0",
    "jasmine-core": "^2.5.2",
    "karma": "^1.3.0",
    "karma-browserify": "^5.1.0",
    "karma-firefox-launcher": "^1.0.0",
    "karma-jasmine": "^1.0.2",
    "mapshaper": "^0.3.11",
    "progress": "^1.1.8",
    "topojson": "^1.6.19",
    "watchify": "^3.7.0",
    "wget": "0.0.1"
  },
  "directories": {},
  "dist": {
    "shasum": "40e25736a28c4cceaaa233f45bb86373a2785b84",
    "tarball": "https://registry.npmjs.org/sane-topojson/-/sane-topojson-2.0.0.tgz"
  },
  "gitHead": "3efc5797df570fc7143a121d0ca9903defb8a8d5",
  "homepage": "https://github.com/etpinard/sane-topojson#readme",
  "keywords": [
    "topojson",
    "geojson",
    "shapefiles",
    "maps"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "etpinard",
      "email": "etienne.t.pinard@gmail.com"
    }
  ],
  "name": "sane-topojson",
  "optionalDependencies": {},
  "readme": "# sane-topojson\n\n[![npm version][badge-version]][npm]\n\n[![Build Status][badge-travis]][travis]\n[![Dependency Status][badge-deps]][deps]\n[![devDependency Status][badge-dev-deps]][dev-deps]\n\nReady-to-use multi-layer topojson files.\n\nThis project encompasses the three step required to turn\n[Natural Earth Data](http://www.naturalearthdata.com/) into topojson files.\n\nThese are:\n\n- `npm run wget`: download to Natural Earth shapefiles and unzips them\n- `npm run shp2geo`: clip and convert shapefiles into geojson files\n- `npm run geo2topo` add properties and convert the geojson files into topojson\n  files\n\n### Configuration\n\nIn `./config.json`:\n\n- `resolutions`: array of resolutions to output\n- `scopes`: array of scopes to output\n\nsane-topojson will output `resolution.length` times `scopes.length` topojson\nfiles.\n\n- `vectors`: array of layers making up each topojson file\n\n### Output\n\nA topojson with the `objects` field:\n\n```js\n{\n    coastlines: {\n        type: '',\n        geometries: []\n    },\n    countries: {\n        type: '',\n        geometries: [\n            {type: '', id: '', arcs: [], properties: {ct: [lon, lat]}},\n            // ...\n        ]\n    },\n    lakes: {\n        type: '',\n        geometries: []\n    },\n    land: {\n        type: '',\n        geometries: []\n    },\n    ocean: {\n        type: '',\n        geometries: []\n    }\n    rivers: {\n        type: '',\n        geometries: []\n    }\n    subunits: {\n        type: '',\n        geometries: [\n            {type: '', id: '', arcs: [], properties: {ct: [lon, lat]}},\n            // ...\n        ]\n    }\n}\n```\n\nwhere `id` is the ISO-3 code for the `countries` layer and two-letter postal\ncode for the `subunits` layer. In `properties`, `ct` is the longitude and\nlatitude coordinates (in degrees East and degrees North respectively) of the\ncentroid of the geometry's largest polygon in area.\n\n### Install\n\n- Install gdal (info:\n  [ubuntu](http://www.sarasafavi.com/installing-gdalogr-on-ubuntu.html) |\n  [mac](https://trac.osgeo.org/gdal/wiki/BuildingOnMac))\n\n- Install node.js dependencies\n\n```\nnpm install sane-topojson\n```\n\n[npm]: https://www.npmjs.com/package/sane-topojson\n[travis]: https://travis-ci.org/etpinard/sane-topojson\n[badge-travis]: https://travis-ci.org/etpinard/sane-topojson.svg?branch=master\n[badge-version]: https://badge.fury.io/js/sane-topojson.svg\n[badge-deps]: https://david-dm.org/etpinard/sane-topojson.svg?style=flat-square\n[deps]: https://david-dm.org/etpinard/sane-topojson\n[badge-dev-deps]: https://david-dm.org/etpinard/sane-topojson/dev-status.svg?style=flat-square\n[dev-deps]: https://david-dm.org/etpinard/sane-topojson#info=devDependencies\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/etpinard/sane-topojson.git"
  },
  "scripts": {
    "clean": "cd build && ls | grep -v README.md | xargs rm",
    "geo2topo": "node ./bin/geo2topo.js",
    "shp2geo": "node ./bin/shp2geo.js",
    "start": "npm clean && npm run wget && npm run shp2geo && npm run geo2topo",
    "test": "karma start test/karma.conf.js",
    "wget": "node ./bin/wget.js"
  },
  "version": "2.0.0"
}
