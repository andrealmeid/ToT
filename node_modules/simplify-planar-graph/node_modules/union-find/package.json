{
  "_args": [
    [
      {
        "raw": "union-find@~0.0.3",
        "scope": null,
        "escapedName": "union-find",
        "name": "union-find",
        "rawSpec": "~0.0.3",
        "spec": ">=0.0.3 <0.1.0",
        "type": "range"
      },
      "/home/italove/Projects/ToT/node_modules/simplify-planar-graph/node_modules/simplicial-complex"
    ]
  ],
  "_from": "union-find@>=0.0.3 <0.1.0",
  "_id": "union-find@0.0.4",
  "_inCache": true,
  "_location": "/simplify-planar-graph/union-find",
  "_npmUser": {
    "name": "mikolalysenko",
    "email": "mikolalysenko@gmail.com"
  },
  "_npmVersion": "1.2.14",
  "_phantomChildren": {},
  "_requested": {
    "raw": "union-find@~0.0.3",
    "scope": null,
    "escapedName": "union-find",
    "name": "union-find",
    "rawSpec": "~0.0.3",
    "spec": ">=0.0.3 <0.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "/simplify-planar-graph/simplicial-complex"
  ],
  "_resolved": "https://registry.npmjs.org/union-find/-/union-find-0.0.4.tgz",
  "_shasum": "b854b3301619bdad144b0014c78f96eac0d2f0f6",
  "_shrinkwrap": null,
  "_spec": "union-find@~0.0.3",
  "_where": "/home/italove/Projects/ToT/node_modules/simplify-planar-graph/node_modules/simplicial-complex",
  "author": {
    "name": "Mikola Lysenko"
  },
  "bugs": {
    "url": "https://github.com/mikolalysenko/union-find/issues"
  },
  "dependencies": {},
  "description": "A union-find data structure for maintaining disjoint sets.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "b854b3301619bdad144b0014c78f96eac0d2f0f6",
    "tarball": "https://registry.npmjs.org/union-find/-/union-find-0.0.4.tgz"
  },
  "gitHead": "8fbd75feecd9d7154f4c2ff21754f483ad07ccab",
  "homepage": "https://github.com/mikolalysenko/union-find#readme",
  "keywords": [
    "union",
    "find",
    "link",
    "disjoint",
    "set",
    "connected",
    "component",
    "graph"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "mikolalysenko",
      "email": "mikolalysenko@gmail.com"
    }
  ],
  "name": "union-find",
  "optionalDependencies": {},
  "readme": "`union-find`\n==========\n\nA basic union-find data structure for node.js.  For more information, see wikipdia:\n\n[Disjoint Set Datastructures](http://en.wikipedia.org/wiki/Disjoint-set_data_structure)\n\n\nUsage\n=====\nHere is an example showing how to do connected component labelling.  Assume we are given a graph with `VERTEX_COUNT` vertices and a list of edges stored in array represented by pairs of vertex indices:\n\n    //Import data structure\n    var UnionFind = require('union-find');\n    \n    //Link all the nodes together\n    var forest = new UnionFind(VERTEX_COUNT);\n    for(var i=0; i<edges.length; ++i) {\n      forest.link(edges[i][0], edges[i][1]);\n    }\n    \n    //Label components\n    var labels = new Array(VERTEX_COUNT);\n    for(var i=0; i<VERTEX_COUNT; ++i) {\n      labels[i] = forest.find(i);\n    }\n\nInstallation\n============\n\n    npm install union-find\n    \n    \nAcknowledgements\n================\n(c) 2013 Mikola Lysenko.  MIT License\n\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/union-find.git"
  },
  "version": "0.0.4"
}
