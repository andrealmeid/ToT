{
  "_args": [
    [
      {
        "raw": "unassertify@^2.0.0",
        "scope": null,
        "escapedName": "unassertify",
        "name": "unassertify",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/home/italove/Projects/ToT/node_modules/mapbox-gl"
    ]
  ],
  "_from": "unassertify@>=2.0.0 <3.0.0",
  "_id": "unassertify@2.0.4",
  "_inCache": true,
  "_location": "/unassertify",
  "_nodeVersion": "7.1.0",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/unassertify-2.0.4.tgz_1482890598955_0.6419927743263543"
  },
  "_npmUser": {
    "name": "twada",
    "email": "takuto.wada@gmail.com"
  },
  "_npmVersion": "3.10.9",
  "_phantomChildren": {
    "amdefine": "1.0.1",
    "optionator": "0.8.2"
  },
  "_requested": {
    "raw": "unassertify@^2.0.0",
    "scope": null,
    "escapedName": "unassertify",
    "name": "unassertify",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/mapbox-gl"
  ],
  "_resolved": "https://registry.npmjs.org/unassertify/-/unassertify-2.0.4.tgz",
  "_shasum": "b3ca2ba5f29b4836e35a6dd77e5b20f6dbbf8e52",
  "_shrinkwrap": null,
  "_spec": "unassertify@^2.0.0",
  "_where": "/home/italove/Projects/ToT/node_modules/mapbox-gl",
  "author": {
    "name": "Takuto Wada",
    "email": "takuto.wada@gmail.com",
    "url": "https://github.com/twada"
  },
  "bugs": {
    "url": "https://github.com/unassert-js/unassertify/issues"
  },
  "dependencies": {
    "acorn": "^4.0.0",
    "convert-source-map": "^1.1.1",
    "escodegen": "^1.6.1",
    "multi-stage-sourcemap": "^0.2.1",
    "through": "^2.3.7",
    "unassert": "^1.3.1"
  },
  "description": "Browserify transform to encourage reliable programming by writing assertions in production code, and compiling them away from release",
  "devDependencies": {
    "browserify": "^13.1.0",
    "coffeeify": "^2.0.0",
    "espower-loader": "^1.0.1",
    "event-stream": "^3.3.4",
    "intelli-espower-loader": "^1.0.1",
    "jshint": "^2.9.3",
    "mocha": "^3.0.2",
    "power-assert": "^1.4.1"
  },
  "directories": {},
  "dist": {
    "shasum": "b3ca2ba5f29b4836e35a6dd77e5b20f6dbbf8e52",
    "tarball": "https://registry.npmjs.org/unassertify/-/unassertify-2.0.4.tgz"
  },
  "files": [
    "README.md",
    "CHANGELOG.md",
    "LICENSE",
    "index.js",
    "package.json"
  ],
  "gitHead": "c42bddda879acd88ec8e5a63805c2149454942df",
  "homepage": "https://github.com/unassert-js/unassertify",
  "keywords": [
    "DbC",
    "unassert",
    "assert",
    "assertion",
    "browserify",
    "browserify-transform"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "twada",
      "email": "takuto.wada@gmail.com"
    }
  ],
  "name": "unassertify",
  "optionalDependencies": {},
  "readme": "unassertify\n================================\n\n[Browserify](http://browserify.org/) transform to encourage reliable programming by writing assertions in production code, and compiling them away from release.\n\n[![Build Status][travis-image]][travis-url]\n[![NPM version][npm-image]][npm-url]\n[![Dependency Status][depstat-image]][depstat-url]\n[![License][license-image]][license-url]\n\n\n#### RELATED MODULES\n\n- [unassert](https://github.com/unassert-js/unassert): Encourage reliable programming by writing assertions in production code, and compiling them away from release.\n- [babel-plugin-unassert](https://github.com/unassert-js/babel-plugin-unassert): Babel plugin for unassert\n- [webpack-unassert-loader](https://github.com/unassert-js/webpack-unassert-loader): Webpack loader for unassert\n- [gulp-unassert](https://github.com/unassert-js/gulp-unassert): Gulp plugin for unassert\n- [unassert-cli](https://github.com/unassert-js/unassert-cli): CLI for unassert\n\n\nINSTALL\n---------------------------------------\n\n```\n$ npm install --save-dev unassertify\n```\n\n\nHOW TO USE\n---------------------------------------\n\n\n### via CLI\n\n```\n$ $(npm bin)/browserify -t unassertify /path/to/src/target.js > /path/to/build/target.js\n```\n\n### via API\n\n```javascript\nvar source = require('vinyl-source-stream');\nvar browserify = require('browserify');\nvar glob = require('glob'),\n\ngulp.task('production_build', function() {\n    var files = glob.sync('./src/*.js');\n    var b = browserify({entries: files});\n    b.transform('unassertify');\n    return b.bundle()\n        .pipe(source('bundle.js'))\n        .pipe(gulp.dest('./dist'));\n});\n```\n\n\nEXAMPLE\n---------------------------------------\n\nFor given `math.js` below,\n\n```javascript\n'use strict';\n\nvar assert = require('assert');\n\nfunction add (a, b) {\n    console.assert(typeof a === 'number');\n    assert(!isNaN(a));\n    assert.equal(typeof b, 'number');\n    assert.ok(!isNaN(b));\n    return a + b;\n}\n```\n\nRun `browserify` with `-t unassertify` to transform file.\n\n```\n$ $(npm bin)/browserify -t unassertify /path/to/demo/math.js > /path/to/build/math.js\n```\n\nYou will see assert calls disappear.\n\n```javascript\n'use strict';\nfunction add(a, b) {\n    return a + b;\n}\n```\n\n\nSUPPORTED PATTERNS\n---------------------------------------\n\nAssertion expressions are removed when they match patterns below. In other words, unassertify removes assertion calls that are compatible with Node.js standard [assert](https://nodejs.org/api/assert.html) API (and `console.assert`).\n\n* `assert(value, [message])`\n* `assert.ok(value, [message])`\n* `assert.equal(actual, expected, [message])`\n* `assert.notEqual(actual, expected, [message])`\n* `assert.strictEqual(actual, expected, [message])`\n* `assert.notStrictEqual(actual, expected, [message])`\n* `assert.deepEqual(actual, expected, [message])`\n* `assert.notDeepEqual(actual, expected, [message])`\n* `assert.deepStrictEqual(actual, expected, [message])`\n* `assert.notDeepStrictEqual(actual, expected, [message])`\n* `assert.fail(actual, expected, message, operator)`\n* `assert.throws(block, [error], [message])`\n* `assert.doesNotThrow(block, [message])`\n* `assert.ifError(value)`\n* `console.assert(value, [message])`\n\nunassertify also removes assert variable declarations,\n\n* `var assert = require(\"assert\")`\n* `var assert = require(\"power-assert\")`\n\nand assignments.\n\n* `assert = require(\"assert\")`\n* `assert = require(\"power-assert\")`\n\n\nAUTHOR\n---------------------------------------\n* [Takuto Wada](https://github.com/twada)\n\n\nOUR SUPPORT POLICY\n---------------------------------------\n\nWe support Node under maintenance. In other words, we stop supporting old Node version when [their maintenance ends](https://github.com/nodejs/LTS).\n\nThis means that any other environment is not supported.\n\nNOTE: If unassertify works in any of the unsupported environments, it is purely coincidental and has no bearing on future compatibility. Use at your own risk.\n\n\nLICENSE\n---------------------------------------\nLicensed under the [MIT](https://github.com/unassert-js/unassertify/blob/master/LICENSE) license.\n\n\n[npm-url]: https://npmjs.org/package/unassertify\n[npm-image]: https://badge.fury.io/js/unassertify.svg\n\n[travis-url]: https://travis-ci.org/unassert-js/unassertify\n[travis-image]: https://secure.travis-ci.org/unassert-js/unassertify.svg?branch=master\n\n[depstat-url]: https://gemnasium.com/unassert-js/unassertify\n[depstat-image]: https://gemnasium.com/unassert-js/unassertify.svg\n\n[license-url]: https://github.com/unassert-js/unassertify/blob/master/LICENSE\n[license-image]: https://img.shields.io/badge/license-MIT-brightgreen.svg\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/unassert-js/unassertify.git"
  },
  "scripts": {
    "lint": "jshint index.js",
    "test": "npm run lint && mocha --require intelli-espower-loader"
  },
  "version": "2.0.4"
}
